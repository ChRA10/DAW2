12/02/2025.-
He descubierto como clonar un repositorio remoto en local, y asi poder ejecutar push desde el VisualStudio.
Los comando utilizado principalmente tiene que ver con git, el dia de hoy, y las actividades realizadas contienen comandos nuevos como export{...., ....}form "", e import "..., ....".
Importante, en el html, en el elemento script se añade el atributo type="module";
- Ej 1

13/02/2025
He copiado el ejercicio 2 y he hecho el ejercicio 3 de las actividades - Framework.
El node:os es una libreria del propio entorno de ejecucion del node. Y para ejecutar una prueba se debe utilizar el comando node "nombre.js", ademas de tener creado un package.json para declarar el "type: module"
ya que si se importa de otro lugar, el elemento script tiene un type="module".
Si no se quiere crear el package.json, se debe crear los ficheros javascript con la terminación .mjs.
El readFile() y el readFileSync() son lo mismo, pero se utiliza de distinta forma.
El readFile() te permite tratar los errores desde el mismo, mientras que el otro no.
- Ej 2
- Ej 3

14/02/2025
He utilizado la libreria npm para instalar el paquete chalk, que sirve para cambiar los colores de la terminal, y hacerlo ver mas astetic.
comando: "npm install chalk";
He aprendido que para utilizar el readline, se debe crear primero una interface, que contiene la entrada y salida del user. Ademas de que el metodo question(), es de tipo asyncrono por lo que se debe utilizar en el primer question, el resto.
Ademas he utilizado el chalk, para incluir colorines en los console.log en el Ej.4.3.
- Ej 4

17/02/2025
Hoy he aprendido lo que es react y sus funciones, he de decir que es secillo de usar una vez que lo entiendes, sin embargo, tal parece que utiliza JSX para trasquilar el codigo de por medio,
lo cual lo hace mas sencillo de utilizar ya que un elemento puede tener varios elementos hijos por adentro con sus respectivos atribtutos.
Lo importante es que te ayuda a optimizar y mantener tu codigo limpio.

Se empieza declarando la raiz del contenedor, es decir de donde se va a renderizar el contenido utilizando ReactDom, y a continuacion puedes utilizar el React.createElement(), para crear los elementos que quieras.
Finalmente utilizas la raiz.render(elementos que deseas ingresar) para añadirlos al html.